// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SISGEH_Backend.Context;

namespace SISGEH_Backend.Migrations
{
    [DbContext(typeof(SISGEH_DbContext))]
    [Migration("20201026222704_26-10-2020")]
    partial class _26102020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SISGEH_Backend.Entities.ImagenesDelPersonal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalDeLaEmpresaId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PersonalDeLaEmpresaId");

                    b.ToTable("ImagenesDelPersonal");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.PersonalDeLaEmpresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDeIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolPersonalId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RolPersonalId");

                    b.ToTable("PersonalDeLaEmpresa");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.RolPersonal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoDelRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDelRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RolPersonal");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.SolicitudDelPersonal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDeLaSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalDeLaEmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("TiempoRequerido")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeSolicitudId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PersonalDeLaEmpresaId");

                    b.HasIndex("TipoDeSolicitudId");

                    b.ToTable("SolicitudDelPersonal");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.TelefonosDelPersonal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumeroTelefonico")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("PersonalDeLaEmpresaId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PersonalDeLaEmpresaId");

                    b.ToTable("TelefonosDelPersonal");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.TipoDeSolicitud", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoDeSolicitud");
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.ImagenesDelPersonal", b =>
                {
                    b.HasOne("SISGEH_Backend.Entities.PersonalDeLaEmpresa", "PersonalDeLaEmpresa")
                        .WithMany()
                        .HasForeignKey("PersonalDeLaEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.PersonalDeLaEmpresa", b =>
                {
                    b.HasOne("SISGEH_Backend.Entities.RolPersonal", "RolPersonal")
                        .WithMany()
                        .HasForeignKey("RolPersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.SolicitudDelPersonal", b =>
                {
                    b.HasOne("SISGEH_Backend.Entities.PersonalDeLaEmpresa", "PersonalDeLaEmpresa")
                        .WithMany()
                        .HasForeignKey("PersonalDeLaEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SISGEH_Backend.Entities.TipoDeSolicitud", "TipoDeSolicitud")
                        .WithMany()
                        .HasForeignKey("TipoDeSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEH_Backend.Entities.TelefonosDelPersonal", b =>
                {
                    b.HasOne("SISGEH_Backend.Entities.PersonalDeLaEmpresa", "PersonalDeLaEmpresa")
                        .WithMany("NumeroDeTelefono")
                        .HasForeignKey("PersonalDeLaEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
